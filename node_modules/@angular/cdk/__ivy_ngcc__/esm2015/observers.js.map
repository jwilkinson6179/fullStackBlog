{"version":3,"file":"observers.js","sources":["../../../src/cdk/observers/observe-content.ts","../../../src/cdk/observers/public-api.ts","../../../src/cdk/observers/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  NgModule,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  AfterContentInit,\n  Injectable,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Subject} from 'rxjs/Subject';\nimport {debounceTime} from 'rxjs/operators/debounceTime';\n\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\n@Injectable()\nexport class MutationObserverFactory {\n  create(callback: MutationCallback): MutationObserver | null {\n    return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n  }\n}\n\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\n@Directive({\n  selector: '[cdkObserveContent]',\n  exportAs: 'cdkObserveContent',\n})\nexport class CdkObserveContent implements AfterContentInit, OnChanges, OnDestroy {\n  private _observer: MutationObserver | null;\n  private _disabled = false;\n\n  /** Event emitted for each change in the element's content. */\n  @Output('cdkObserveContent') event = new EventEmitter<MutationRecord[]>();\n\n  /**\n   * Whether observing content is disabled. This option can be used\n   * to disconnect the underlying MutationObserver until it is needed.\n   */\n  @Input('cdkObserveContentDisabled')\n  get disabled() { return this._disabled; }\n  set disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** Used for debouncing the emitted values to the observeContent event. */\n  private _debouncer = new Subject<MutationRecord[]>();\n\n  /** Debounce interval for emitting the changes. */\n  @Input() debounce: number;\n\n  constructor(\n    private _mutationObserverFactory: MutationObserverFactory,\n    private _elementRef: ElementRef,\n    private _ngZone: NgZone) { }\n\n  ngAfterContentInit() {\n    if (this.debounce > 0) {\n      this._ngZone.runOutsideAngular(() => {\n        this._debouncer.pipe(debounceTime(this.debounce))\n            .subscribe((mutations: MutationRecord[]) => this.event.emit(mutations));\n      });\n    } else {\n      this._debouncer.subscribe(mutations => this.event.emit(mutations));\n    }\n\n    this._observer = this._ngZone.runOutsideAngular(() => {\n      return this._mutationObserverFactory.create((mutations: MutationRecord[]) => {\n        this._debouncer.next(mutations);\n      });\n    });\n\n    if (!this.disabled) {\n      this._enable();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['disabled']) {\n      changes['disabled'].currentValue ? this._disable() : this._enable();\n    }\n  }\n\n  ngOnDestroy() {\n    this._disable();\n    this._debouncer.complete();\n  }\n\n  private _disable() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  private _enable() {\n    if (this._observer) {\n      this._observer.observe(this._elementRef.nativeElement, {\n        characterData: true,\n        childList: true,\n        subtree: true\n      });\n    }\n  }\n}\n\n\n@NgModule({\n  exports: [CdkObserveContent],\n  declarations: [CdkObserveContent],\n  providers: [MutationObserverFactory]\n})\nexport class ObserversModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './observe-content';\n\n/**\n * @deprecated Use CdkObserveContent\n * @deletion-target 6.0.0\n */\nexport {CdkObserveContent as ObserveContent} from './observe-content';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}