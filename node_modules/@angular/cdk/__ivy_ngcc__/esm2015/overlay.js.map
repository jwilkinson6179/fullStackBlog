{"version":3,"file":"overlay.js","sources":["../../../src/cdk/overlay/scroll/noop-scroll-strategy.ts","../../../src/cdk/overlay/overlay-config.ts","../../../src/cdk/overlay/position/connected-position.ts","../../../src/cdk/overlay/scroll/scroll-strategy.ts","../../../src/cdk/overlay/scroll/close-scroll-strategy.ts","../../../src/cdk/overlay/scroll/block-scroll-strategy.ts","../../../src/cdk/overlay/position/scroll-clip.ts","../../../src/cdk/overlay/scroll/reposition-scroll-strategy.ts","../../../src/cdk/overlay/scroll/scroll-strategy-options.ts","../../../src/cdk/overlay/scroll/index.ts","../../../src/cdk/overlay/overlay-ref.ts","../../../src/cdk/overlay/position/connected-position-strategy.ts","../../../src/cdk/overlay/position/global-position-strategy.ts","../../../src/cdk/overlay/position/overlay-position-builder.ts","../../../src/cdk/overlay/keyboard/overlay-keyboard-dispatcher.ts","../../../src/cdk/overlay/overlay-container.ts","../../../src/cdk/overlay/overlay.ts","../../../src/cdk/overlay/overlay-directives.ts","../../../src/cdk/overlay/overlay-module.ts","../../../src/cdk/overlay/fullscreen-overlay-container.ts","../../../src/cdk/overlay/public-api.ts","../../../src/cdk/overlay/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ScrollStrategy} from './scroll-strategy';\n\n/** Scroll strategy that doesn't do anything. */\nexport class NoopScrollStrategy implements ScrollStrategy {\n  /** Does nothing, as this scroll strategy is a no-op. */\n  enable() { }\n  /** Does nothing, as this scroll strategy is a no-op. */\n  disable() { }\n  /** Does nothing, as this scroll strategy is a no-op. */\n  attach() { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PositionStrategy} from './position/position-strategy';\nimport {Direction} from '@angular/cdk/bidi';\nimport {ScrollStrategy} from './scroll/scroll-strategy';\nimport {NoopScrollStrategy} from './scroll/noop-scroll-strategy';\n\n\n/** Initial configuration used when creating an overlay. */\nexport class OverlayConfig {\n  /** Strategy with which to position the overlay. */\n  positionStrategy?: PositionStrategy;\n\n  /** Strategy to be used when handling scroll events while the overlay is open. */\n  scrollStrategy?: ScrollStrategy = new NoopScrollStrategy();\n\n  /** Custom class to add to the overlay pane. */\n  panelClass?: string | string[] = '';\n\n  /** Whether the overlay has a backdrop. */\n  hasBackdrop?: boolean = false;\n\n  /** Custom class to add to the backdrop */\n  backdropClass?: string = 'cdk-overlay-dark-backdrop';\n\n  /** The width of the overlay panel. If a number is provided, pixel units are assumed. */\n  width?: number | string;\n\n  /** The height of the overlay panel. If a number is provided, pixel units are assumed. */\n  height?: number | string;\n\n  /** The min-width of the overlay panel. If a number is provided, pixel units are assumed. */\n  minWidth?: number | string;\n\n  /** The min-height of the overlay panel. If a number is provided, pixel units are assumed. */\n  minHeight?: number | string;\n\n  /** The max-width of the overlay panel. If a number is provided, pixel units are assumed. */\n  maxWidth?: number | string;\n\n  /** The max-height of the overlay panel. If a number is provided, pixel units are assumed. */\n  maxHeight?: number | string;\n\n  /** The direction of the text in the overlay panel. */\n  direction?: Direction = 'ltr';\n\n  constructor(config?: OverlayConfig) {\n    if (config) {\n      Object.keys(config)\n        .filter(key => typeof config[key] !== 'undefined')\n        .forEach(key => this[key] = config[key]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Horizontal dimension of a connection point on the perimeter of the origin or overlay element. */\nimport {Optional} from '@angular/core';\nexport type HorizontalConnectionPos = 'start' | 'center' | 'end';\n\n/** Vertical dimension of a connection point on the perimeter of the origin or overlay element. */\nexport type VerticalConnectionPos = 'top' | 'center' | 'bottom';\n\n\n/** A connection point on the origin element. */\nexport interface OriginConnectionPosition {\n  originX: HorizontalConnectionPos;\n  originY: VerticalConnectionPos;\n}\n\n/** A connection point on the overlay element. */\nexport interface OverlayConnectionPosition {\n  overlayX: HorizontalConnectionPos;\n  overlayY: VerticalConnectionPos;\n}\n\n/** The points of the origin element and the overlay element to connect. */\nexport class ConnectionPositionPair {\n  /** X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'. */\n  originX: HorizontalConnectionPos;\n  /** Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'. */\n  originY: VerticalConnectionPos;\n  /** X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'. */\n  overlayX: HorizontalConnectionPos;\n  /** Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'. */\n  overlayY: VerticalConnectionPos;\n\n  constructor(\n    origin: OriginConnectionPosition,\n    overlay: OverlayConnectionPosition,\n    public offsetX?: number,\n    public offsetY?: number) {\n\n    this.originX = origin.originX;\n    this.originY = origin.originY;\n    this.overlayX = overlay.overlayX;\n    this.overlayY = overlay.overlayY;\n  }\n}\n\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nexport class ScrollingVisibility {\n  isOriginClipped: boolean;\n  isOriginOutsideView: boolean;\n  isOverlayClipped: boolean;\n  isOverlayOutsideView: boolean;\n}\n\n/** The change event emitted by the strategy when a fallback position is used. */\nexport class ConnectedOverlayPositionChange {\n  constructor(\n      /** The position used as a result of this change. */\n      public connectionPair: ConnectionPositionPair,\n      /** @docs-private */\n      @Optional() public scrollableViewProperties: ScrollingVisibility) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayRef} from '../overlay-ref';\n\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n */\nexport interface ScrollStrategy {\n  /** Enable this scroll strategy (called when the attached overlay is attached to a portal). */\n  enable: () => void;\n\n  /** Disable this scroll strategy (called when the attached overlay is detached from a portal). */\n  disable: () => void;\n\n  /** Attaches this `ScrollStrategy` to an overlay. */\n  attach: (overlayRef: OverlayRef) => void;\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nexport function getMatScrollStrategyAlreadyAttachedError(): Error {\n  return Error(`Scroll strategy has already been attached.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgZone} from '@angular/core';\nimport {ScrollStrategy, getMatScrollStrategyAlreadyAttachedError} from './scroll-strategy';\nimport {OverlayRef} from '../overlay-ref';\nimport {Subscription} from 'rxjs/Subscription';\nimport {ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\n\n/**\n * Config options for the CloseScrollStrategy.\n */\nexport interface CloseScrollStrategyConfig {\n  /** Amount of pixels the user has to scroll before the overlay is closed. */\n  threshold?: number;\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nexport class CloseScrollStrategy implements ScrollStrategy {\n  private _scrollSubscription: Subscription|null = null;\n  private _overlayRef: OverlayRef;\n  private _initialScrollPosition: number;\n\n  constructor(\n    private _scrollDispatcher: ScrollDispatcher,\n    private _ngZone: NgZone,\n    private _viewportRuler: ViewportRuler,\n    private _config?: CloseScrollStrategyConfig) {}\n\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef: OverlayRef) {\n    if (this._overlayRef) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n\n    this._overlayRef = overlayRef;\n  }\n\n  /** Enables the closing of the attached overlay on scroll. */\n  enable() {\n    if (this._scrollSubscription) {\n      return;\n    }\n\n    const stream = this._scrollDispatcher.scrolled(0);\n\n    if (this._config && this._config.threshold && this._config.threshold > 1) {\n      this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n\n      this._scrollSubscription = stream.subscribe(() => {\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n\n        if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config!.threshold!) {\n          this._detach();\n        } else {\n          this._overlayRef.updatePosition();\n        }\n      });\n    } else {\n      this._scrollSubscription = stream.subscribe(this._detach);\n    }\n  }\n\n  /** Disables the closing the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n\n  /** Detaches the overlay ref and disables the scroll strategy. */\n  private _detach = () => {\n    this.disable();\n\n    if (this._overlayRef.hasAttached()) {\n      this._ngZone.run(() => this._overlayRef.detach());\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ScrollStrategy} from './scroll-strategy';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\n\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nexport class BlockScrollStrategy implements ScrollStrategy {\n  private _previousHTMLStyles = { top: '', left: '' };\n  private _previousScrollPosition: { top: number, left: number };\n  private _isEnabled = false;\n  private _document: Document;\n\n  constructor(private _viewportRuler: ViewportRuler, document: any) {\n    this._document = document;\n  }\n\n  /** Attaches this scroll strategy to an overlay. */\n  attach() { }\n\n  /** Blocks page-level scroll while the attached overlay is open. */\n  enable() {\n    if (this._canBeEnabled()) {\n      const root = this._document.documentElement;\n\n      this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n\n      // Cache the previous inline styles in case the user had set them.\n      this._previousHTMLStyles.left = root.style.left || '';\n      this._previousHTMLStyles.top = root.style.top || '';\n\n      // Note: we're using the `html` node, instead of the `body`, because the `body` may\n      // have the user agent margin, whereas the `html` is guaranteed not to have one.\n      root.style.left = `${-this._previousScrollPosition.left}px`;\n      root.style.top = `${-this._previousScrollPosition.top}px`;\n      root.classList.add('cdk-global-scrollblock');\n      this._isEnabled = true;\n    }\n  }\n\n  /** Unblocks page-level scroll while the attached overlay is open. */\n  disable() {\n    if (this._isEnabled) {\n      const html = this._document.documentElement;\n      const body = this._document.body;\n      const previousHtmlScrollBehavior = html.style['scrollBehavior'] || '';\n      const previousBodyScrollBehavior = body.style['scrollBehavior'] || '';\n\n      this._isEnabled = false;\n\n      html.style.left = this._previousHTMLStyles.left;\n      html.style.top = this._previousHTMLStyles.top;\n      html.classList.remove('cdk-global-scrollblock');\n\n      // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n      // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n      html.style['scrollBehavior'] = body.style['scrollBehavior'] = 'auto';\n\n      window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n\n      html.style['scrollBehavior'] = previousHtmlScrollBehavior;\n      body.style['scrollBehavior'] = previousBodyScrollBehavior;\n    }\n  }\n\n  private _canBeEnabled(): boolean {\n    // Since the scroll strategies can't be singletons, we have to use a global CSS class\n    // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n    // scrolling multiple times.\n    const html = this._document.documentElement;\n\n    if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n      return false;\n    }\n\n    const body = this._document.body;\n    const viewport = this._viewportRuler.getViewportSize();\n    return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nexport function isElementScrolledOutsideView(element: ClientRect, scrollContainers: ClientRect[]) {\n  return scrollContainers.some(containerBounds => {\n    const outsideAbove = element.bottom < containerBounds.top;\n    const outsideBelow = element.top > containerBounds.bottom;\n    const outsideLeft = element.right < containerBounds.left;\n    const outsideRight = element.left > containerBounds.right;\n\n    return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n  });\n}\n\n\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nexport function isElementClippedByScrolling(element: ClientRect, scrollContainers: ClientRect[]) {\n  return scrollContainers.some(scrollContainerRect => {\n    const clippedAbove = element.top < scrollContainerRect.top;\n    const clippedBelow = element.bottom > scrollContainerRect.bottom;\n    const clippedLeft = element.left < scrollContainerRect.left;\n    const clippedRight = element.right > scrollContainerRect.right;\n\n    return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n  });\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgZone} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {ScrollStrategy, getMatScrollStrategyAlreadyAttachedError} from './scroll-strategy';\nimport {OverlayRef} from '../overlay-ref';\nimport {ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\nimport {isElementScrolledOutsideView} from '../position/scroll-clip';\n\n/**\n * Config options for the RepositionScrollStrategy.\n */\nexport interface RepositionScrollStrategyConfig {\n  /** Time in milliseconds to throttle the scroll events. */\n  scrollThrottle?: number;\n\n  /** Whether to close the overlay once the user has scrolled away completely. */\n  autoClose?: boolean;\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nexport class RepositionScrollStrategy implements ScrollStrategy {\n  private _scrollSubscription: Subscription|null = null;\n  private _overlayRef: OverlayRef;\n\n  constructor(\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewportRuler: ViewportRuler,\n    private _ngZone: NgZone,\n    private _config?: RepositionScrollStrategyConfig) { }\n\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef: OverlayRef) {\n    if (this._overlayRef) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n\n    this._overlayRef = overlayRef;\n  }\n\n  /** Enables repositioning of the attached overlay on scroll. */\n  enable() {\n    if (!this._scrollSubscription) {\n      const throttle = this._config ? this._config.scrollThrottle : 0;\n\n      this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n        this._overlayRef.updatePosition();\n\n        // TODO(crisbeto): make `close` on by default once all components can handle it.\n        if (this._config && this._config.autoClose) {\n          const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n          const {width, height} = this._viewportRuler.getViewportSize();\n\n          // TODO(crisbeto): include all ancestor scroll containers here once\n          // we have a way of exposing the trigger element to the scroll strategy.\n          const parentRects = [{width, height, bottom: height, right: width, top: 0, left: 0}];\n\n          if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n            this.disable();\n            this._ngZone.run(() => this._overlayRef.detach());\n          }\n        }\n      });\n    }\n  }\n\n  /** Disables repositioning of the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, NgZone, Inject} from '@angular/core';\nimport {CloseScrollStrategy, CloseScrollStrategyConfig} from './close-scroll-strategy';\nimport {NoopScrollStrategy} from './noop-scroll-strategy';\nimport {BlockScrollStrategy} from './block-scroll-strategy';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  RepositionScrollStrategy,\n  RepositionScrollStrategyConfig,\n} from './reposition-scroll-strategy';\n\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\n@Injectable()\nexport class ScrollStrategyOptions {\n  private _document: Document;\n\n  constructor(\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewportRuler: ViewportRuler,\n    private _ngZone: NgZone,\n    @Inject(DOCUMENT) document: any) {\n      this._document = document;\n    }\n\n  /** Do nothing on scroll. */\n  noop = () => new NoopScrollStrategy();\n\n  /**\n   * Close the overlay as soon as the user scrolls.\n   * @param config Configuration to be used inside the scroll strategy.\n   */\n  close = (config?: CloseScrollStrategyConfig) => new CloseScrollStrategy(this._scrollDispatcher,\n      this._ngZone, this._viewportRuler, config)\n\n  /** Block scrolling. */\n  block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n\n  /**\n   * Update the overlay's position on scroll.\n   * @param config Configuration to be used inside the scroll strategy.\n   * Allows debouncing the reposition calls.\n   */\n  reposition = (config?: RepositionScrollStrategyConfig) => new RepositionScrollStrategy(\n      this._scrollDispatcher, this._viewportRuler, this._ngZone, config)\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {CdkScrollable, ScrollDispatcher} from '@angular/cdk/scrolling';\n\n// Export pre-defined scroll strategies and interface to build custom ones.\nexport {ScrollStrategy} from './scroll-strategy';\nexport {ScrollStrategyOptions} from './scroll-strategy-options';\nexport {RepositionScrollStrategy} from './reposition-scroll-strategy';\nexport {CloseScrollStrategy} from './close-scroll-strategy';\nexport {NoopScrollStrategy} from './noop-scroll-strategy';\nexport {BlockScrollStrategy} from './block-scroll-strategy';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction} from '@angular/cdk/bidi';\nimport {ComponentPortal, Portal, PortalOutlet, TemplatePortal} from '@angular/cdk/portal';\nimport {ComponentRef, EmbeddedViewRef, NgZone} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {take} from 'rxjs/operators/take';\nimport {Subject} from 'rxjs/Subject';\nimport {OverlayKeyboardDispatcher} from './keyboard/overlay-keyboard-dispatcher';\nimport {OverlayConfig} from './overlay-config';\n\n\n/** An object where all of its properties cannot be written. */\nexport type ImmutableObject<T> = {\n  readonly [P in keyof T]: T[P];\n};\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef implements PortalOutlet {\n  private _backdropElement: HTMLElement | null = null;\n  private _backdropClick: Subject<MouseEvent> = new Subject();\n  private _attachments = new Subject<void>();\n  private _detachments = new Subject<void>();\n\n  /** Stream of keydown events dispatched to this overlay. */\n  _keydownEvents = new Subject<KeyboardEvent>();\n\n  constructor(\n      private _portalOutlet: PortalOutlet,\n      private _pane: HTMLElement,\n      private _config: ImmutableObject<OverlayConfig>,\n      private _ngZone: NgZone,\n      private _keyboardDispatcher: OverlayKeyboardDispatcher,\n      private _document: Document) {\n\n    if (_config.scrollStrategy) {\n      _config.scrollStrategy.attach(this);\n    }\n  }\n\n  /** The overlay's HTML element */\n  get overlayElement(): HTMLElement {\n    return this._pane;\n  }\n\n  /** The overlay's backdrop HTML element. */\n  get backdropElement(): HTMLElement | null {\n    return this._backdropElement;\n  }\n\n  attach<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n  attach<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T>;\n  attach(portal: any): any;\n\n  /**\n   * Attaches content, given via a Portal, to the overlay.\n   * If the overlay is configured to have a backdrop, it will be created.\n   *\n   * @param portal Portal instance to which to attach the overlay.\n   * @returns The portal attachment result.\n   */\n  attach(portal: Portal<any>): any {\n    let attachResult = this._portalOutlet.attach(portal);\n\n    if (this._config.positionStrategy) {\n      this._config.positionStrategy.attach(this);\n    }\n\n    // Update the pane element with the given configuration.\n    this._updateStackingOrder();\n    this._updateElementSize();\n    this._updateElementDirection();\n\n    if (this._config.scrollStrategy) {\n      this._config.scrollStrategy.enable();\n    }\n\n    // Update the position once the zone is stable so that the overlay will be fully rendered\n    // before attempting to position it, as the position may depend on the size of the rendered\n    // content.\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      // The overlay could've been detached before the zone has stabilized.\n      if (this.hasAttached()) {\n        this.updatePosition();\n      }\n    });\n\n    // Enable pointer events for the overlay pane element.\n    this._togglePointerEvents(true);\n\n    if (this._config.hasBackdrop) {\n      this._attachBackdrop();\n    }\n\n    if (this._config.panelClass) {\n      // We can't do a spread here, because IE doesn't support setting multiple classes.\n      if (Array.isArray(this._config.panelClass)) {\n        this._config.panelClass.forEach(cls => this._pane.classList.add(cls));\n      } else {\n        this._pane.classList.add(this._config.panelClass);\n      }\n    }\n\n    // Only emit the `attachments` event once all other setup is done.\n    this._attachments.next();\n\n    // Track this overlay by the keyboard dispatcher\n    this._keyboardDispatcher.add(this);\n\n    return attachResult;\n  }\n\n  /**\n   * Detaches an overlay from a portal.\n   * @returns The portal detachment result.\n   */\n  detach(): any {\n    if (!this.hasAttached()) {\n      return;\n    }\n\n    this.detachBackdrop();\n\n    // When the overlay is detached, the pane element should disable pointer events.\n    // This is necessary because otherwise the pane element will cover the page and disable\n    // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n    this._togglePointerEvents(false);\n\n    if (this._config.positionStrategy && this._config.positionStrategy.detach) {\n      this._config.positionStrategy.detach();\n    }\n\n    if (this._config.scrollStrategy) {\n      this._config.scrollStrategy.disable();\n    }\n\n    const detachmentResult = this._portalOutlet.detach();\n\n    // Only emit after everything is detached.\n    this._detachments.next();\n\n    // Remove this overlay from keyboard dispatcher tracking\n    this._keyboardDispatcher.remove(this);\n\n    return detachmentResult;\n  }\n\n  /** Cleans up the overlay from the DOM. */\n  dispose(): void {\n    const isAttached = this.hasAttached();\n\n    if (this._config.positionStrategy) {\n      this._config.positionStrategy.dispose();\n    }\n\n    if (this._config.scrollStrategy) {\n      this._config.scrollStrategy.disable();\n    }\n\n    this.detachBackdrop();\n    this._keyboardDispatcher.remove(this);\n    this._portalOutlet.dispose();\n    this._attachments.complete();\n    this._backdropClick.complete();\n    this._keydownEvents.complete();\n\n    if (isAttached) {\n      this._detachments.next();\n    }\n\n    this._detachments.complete();\n  }\n\n  /** Whether the overlay has attached content. */\n  hasAttached(): boolean {\n    return this._portalOutlet.hasAttached();\n  }\n\n  /** Gets an observable that emits when the backdrop has been clicked. */\n  backdropClick(): Observable<MouseEvent> {\n    return this._backdropClick.asObservable();\n  }\n\n  /** Gets an observable that emits when the overlay has been attached. */\n  attachments(): Observable<void> {\n    return this._attachments.asObservable();\n  }\n\n  /** Gets an observable that emits when the overlay has been detached. */\n  detachments(): Observable<void> {\n    return this._detachments.asObservable();\n  }\n\n  /** Gets an observable of keydown events targeted to this overlay. */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._keydownEvents.asObservable();\n  }\n\n  /** Gets the the current overlay configuration, which is immutable. */\n  getConfig(): OverlayConfig {\n    return this._config;\n  }\n\n  /** Updates the position of the overlay based on the position strategy. */\n  updatePosition() {\n    if (this._config.positionStrategy) {\n      this._config.positionStrategy.apply();\n    }\n  }\n\n  /** Update the size properties of the overlay. */\n  updateSize(sizeConfig: OverlaySizeConfig) {\n    this._config = {...this._config, ...sizeConfig};\n    this._updateElementSize();\n  }\n\n  /** Sets the LTR/RTL direction for the overlay. */\n  setDirection(dir: Direction) {\n    this._config = {...this._config, direction: dir};\n    this._updateElementDirection();\n  }\n\n  /** Updates the text direction of the overlay panel. */\n  private _updateElementDirection() {\n    this._pane.setAttribute('dir', this._config.direction!);\n  }\n\n  /** Updates the size of the overlay element based on the overlay config. */\n  private _updateElementSize() {\n    if (this._config.width || this._config.width === 0) {\n      this._pane.style.width = formatCssUnit(this._config.width);\n    }\n\n    if (this._config.height || this._config.height === 0) {\n      this._pane.style.height = formatCssUnit(this._config.height);\n    }\n\n    if (this._config.minWidth || this._config.minWidth === 0) {\n      this._pane.style.minWidth = formatCssUnit(this._config.minWidth);\n    }\n\n    if (this._config.minHeight || this._config.minHeight === 0) {\n      this._pane.style.minHeight = formatCssUnit(this._config.minHeight);\n    }\n\n    if (this._config.maxWidth || this._config.maxWidth === 0) {\n      this._pane.style.maxWidth = formatCssUnit(this._config.maxWidth);\n    }\n\n    if (this._config.maxHeight || this._config.maxHeight === 0) {\n      this._pane.style.maxHeight = formatCssUnit(this._config.maxHeight);\n    }\n  }\n\n  /** Toggles the pointer events for the overlay pane element. */\n  private _togglePointerEvents(enablePointer: boolean) {\n    this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n  }\n\n  /** Attaches a backdrop for this overlay. */\n  private _attachBackdrop() {\n    const showingClass = 'cdk-overlay-backdrop-showing';\n\n    this._backdropElement = this._document.createElement('div');\n    this._backdropElement.classList.add('cdk-overlay-backdrop');\n\n    if (this._config.backdropClass) {\n      this._backdropElement.classList.add(this._config.backdropClass);\n    }\n\n    // Insert the backdrop before the pane in the DOM order,\n    // in order to handle stacked overlays properly.\n    this._pane.parentElement!.insertBefore(this._backdropElement, this._pane);\n\n    // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n    // action desired when such a click occurs (usually closing the overlay).\n    this._backdropElement.addEventListener('click',\n        (event: MouseEvent) => this._backdropClick.next(event));\n\n    // Add class to fade-in the backdrop after one frame.\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => {\n          if (this._backdropElement) {\n            this._backdropElement.classList.add(showingClass);\n          }\n        });\n      });\n    } else {\n      this._backdropElement.classList.add(showingClass);\n    }\n  }\n\n  /**\n   * Updates the stacking order of the element, moving it to the top if necessary.\n   * This is required in cases where one overlay was detached, while another one,\n   * that should be behind it, was destroyed. The next time both of them are opened,\n   * the stacking will be wrong, because the detached element's pane will still be\n   * in its original DOM position.\n   */\n  private _updateStackingOrder() {\n    if (this._pane.nextSibling) {\n      this._pane.parentNode!.appendChild(this._pane);\n    }\n  }\n\n  /** Detaches the backdrop (if any) associated with the overlay. */\n  detachBackdrop(): void {\n    let backdropToDetach = this._backdropElement;\n\n    if (backdropToDetach) {\n      let finishDetach = () => {\n        // It may not be attached to anything in certain cases (e.g. unit tests).\n        if (backdropToDetach && backdropToDetach.parentNode) {\n          backdropToDetach.parentNode.removeChild(backdropToDetach);\n        }\n\n        // It is possible that a new portal has been attached to this overlay since we started\n        // removing the backdrop. If that is the case, only clear the backdrop reference if it\n        // is still the same instance that we started to remove.\n        if (this._backdropElement == backdropToDetach) {\n          this._backdropElement = null;\n        }\n      };\n\n      backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n\n      if (this._config.backdropClass) {\n        backdropToDetach.classList.remove(this._config.backdropClass);\n      }\n\n      backdropToDetach.addEventListener('transitionend', finishDetach);\n\n      // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n      // In this case we make it unclickable and we try to remove it after a delay.\n      backdropToDetach.style.pointerEvents = 'none';\n\n      // Run this outside the Angular zone because there's nothing that Angular cares about.\n      // If it were to run inside the Angular zone, every test that used Overlay would have to be\n      // either async or fakeAsync.\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(finishDetach, 500);\n      });\n    }\n  }\n}\n\nfunction formatCssUnit(value: number | string) {\n  return typeof value === 'string' ? value as string : `${value}px`;\n}\n\n\n/** Size properties for an overlay. */\nexport interface OverlaySizeConfig {\n  width?: number | string;\n  height?: number | string;\n  minWidth?: number | string;\n  minHeight?: number | string;\n  maxWidth?: number | string;\n  maxHeight?: number | string;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PositionStrategy} from './position-strategy';\nimport {ElementRef} from '@angular/core';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  ConnectionPositionPair,\n  OriginConnectionPosition,\n  OverlayConnectionPosition,\n  ConnectedOverlayPositionChange,\n  ScrollingVisibility,\n} from './connected-position';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable} from 'rxjs/Observable';\nimport {CdkScrollable} from '@angular/cdk/scrolling';\nimport {isElementScrolledOutsideView, isElementClippedByScrolling} from './scroll-clip';\nimport {OverlayRef} from '../overlay-ref';\n\n\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nexport class ConnectedPositionStrategy implements PositionStrategy {\n  /** Layout direction of the position strategy. */\n  private _dir = 'ltr';\n\n  /** The offset in pixels for the overlay connection point on the x-axis */\n  private _offsetX: number = 0;\n\n  /** The offset in pixels for the overlay connection point on the y-axis */\n  private _offsetY: number = 0;\n\n  /** The Scrollable containers used to check scrollable view properties on position change. */\n  private scrollables: CdkScrollable[] = [];\n\n  /** Subscription to viewport resize events. */\n  private _resizeSubscription = Subscription.EMPTY;\n\n  /** Whether the we're dealing with an RTL context */\n  get _isRtl() {\n    return this._dir === 'rtl';\n  }\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  _preferredPositions: ConnectionPositionPair[] = [];\n\n  /** The origin element against which the overlay will be positioned. */\n  private _origin: HTMLElement;\n\n  /** The overlay pane element. */\n  private _pane: HTMLElement;\n\n  /** The last position to have been calculated as the best fit position. */\n  private _lastConnectedPosition: ConnectionPositionPair;\n\n  /** Whether the position strategy is applied currently. */\n  private _applied = false;\n\n  /** Whether the overlay position is locked. */\n  private _positionLocked = false;\n\n  private _onPositionChange = new Subject<ConnectedOverlayPositionChange>();\n\n  /** Emits an event when the connection point changes. */\n  get onPositionChange(): Observable<ConnectedOverlayPositionChange> {\n    return this._onPositionChange.asObservable();\n  }\n\n  constructor(\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition,\n      private _connectedTo: ElementRef,\n      private _viewportRuler: ViewportRuler,\n      private _document: any) {\n    this._origin = this._connectedTo.nativeElement;\n    this.withFallbackPosition(originPos, overlayPos);\n  }\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  get positions(): ConnectionPositionPair[] {\n    return this._preferredPositions;\n  }\n\n  /** Attach this position strategy to an overlay. */\n  attach(overlayRef: OverlayRef): void {\n    this._pane = overlayRef.overlayElement;\n    this._resizeSubscription.unsubscribe();\n    this._resizeSubscription = this._viewportRuler.change().subscribe(() => this.apply());\n  }\n\n  /** Disposes all resources used by the position strategy. */\n  dispose() {\n    this._applied = false;\n    this._resizeSubscription.unsubscribe();\n    this._onPositionChange.complete();\n  }\n\n  /** @docs-private */\n  detach() {\n    this._applied = false;\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /**\n   * Updates the position of the overlay element, using whichever preferred position relative\n   * to the origin fits on-screen.\n   * @docs-private\n   */\n  apply(): void {\n    // If the position has been applied already (e.g. when the overlay was opened) and the\n    // consumer opted into locking in the position, re-use the  old position, in order to\n    // prevent the overlay from jumping around.\n    if (this._applied && this._positionLocked && this._lastConnectedPosition) {\n      this.recalculateLastPosition();\n      return;\n    }\n\n    this._applied = true;\n\n    // We need the bounding rects for the origin and the overlay to determine how to position\n    // the overlay relative to the origin.\n    const element = this._pane;\n    const originRect = this._origin.getBoundingClientRect();\n    const overlayRect = element.getBoundingClientRect();\n\n    // We use the viewport size to determine whether a position would go off-screen.\n    const viewportSize = this._viewportRuler.getViewportSize();\n\n    // Fallback point if none of the fallbacks fit into the viewport.\n    let fallbackPoint: OverlayPoint | undefined;\n    let fallbackPosition: ConnectionPositionPair | undefined;\n\n    // We want to place the overlay in the first of the preferred positions such that the\n    // overlay fits on-screen.\n    for (let pos of this._preferredPositions) {\n      // Get the (x, y) point of connection on the origin, and then use that to get the\n      // (top, left) coordinate for the overlay at `pos`.\n      let originPoint = this._getOriginConnectionPoint(originRect, pos);\n      let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportSize, pos);\n\n      // If the overlay in the calculated position fits on-screen, put it there and we're done.\n      if (overlayPoint.fitsInViewport) {\n        this._setElementPosition(element, overlayRect, overlayPoint, pos);\n\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastConnectedPosition = pos;\n\n        return;\n      } else if (!fallbackPoint || fallbackPoint.visibleArea < overlayPoint.visibleArea) {\n        fallbackPoint = overlayPoint;\n        fallbackPosition = pos;\n      }\n    }\n\n    // If none of the preferred positions were in the viewport, take the one\n    // with the largest visible area.\n    this._setElementPosition(element, overlayRect, fallbackPoint!, fallbackPosition!);\n  }\n\n  /**\n   * Re-positions the overlay element with the trigger in its last calculated position,\n   * even if a position higher in the \"preferred positions\" list would now fit. This\n   * allows one to re-align the panel without changing the orientation of the panel.\n   */\n  recalculateLastPosition(): void {\n    // If the overlay has never been positioned before, do nothing.\n    if (!this._lastConnectedPosition) {\n      return;\n    }\n\n    const originRect = this._origin.getBoundingClientRect();\n    const overlayRect = this._pane.getBoundingClientRect();\n    const viewportSize = this._viewportRuler.getViewportSize();\n    const lastPosition = this._lastConnectedPosition || this._preferredPositions[0];\n\n    let originPoint = this._getOriginConnectionPoint(originRect, lastPosition);\n    let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportSize, lastPosition);\n    this._setElementPosition(this._pane, overlayRect, overlayPoint, lastPosition);\n  }\n\n  /**\n   * Sets the list of Scrollable containers that host the origin element so that\n   * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n   * Scrollable must be an ancestor element of the strategy's origin element.\n   */\n  withScrollableContainers(scrollables: CdkScrollable[]) {\n    this.scrollables = scrollables;\n  }\n\n  /**\n   * Adds a new preferred fallback position.\n   * @param originPos\n   * @param overlayPos\n   */\n  withFallbackPosition(\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition,\n      offsetX?: number,\n      offsetY?: number): this {\n\n    const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n    this._preferredPositions.push(position);\n    return this;\n  }\n\n  /**\n   * Sets the layout direction so the overlay's position can be adjusted to match.\n   * @param dir New layout direction.\n   */\n  withDirection(dir: 'ltr' | 'rtl'): this {\n    this._dir = dir;\n    return this;\n  }\n\n  /**\n   * Sets an offset for the overlay's connection point on the x-axis\n   * @param offset New offset in the X axis.\n   */\n  withOffsetX(offset: number): this {\n    this._offsetX = offset;\n    return this;\n  }\n\n  /**\n   * Sets an offset for the overlay's connection point on the y-axis\n   * @param  offset New offset in the Y axis.\n   */\n  withOffsetY(offset: number): this {\n    this._offsetY = offset;\n    return this;\n  }\n\n  /**\n   * Sets whether the overlay's position should be locked in after it is positioned\n   * initially. When an overlay is locked in, it won't attempt to reposition itself\n   * when the position is re-applied (e.g. when the user scrolls away).\n   * @param isLocked Whether the overlay should locked in.\n   */\n  withLockedPosition(isLocked: boolean): this {\n    this._positionLocked = isLocked;\n    return this;\n  }\n\n  /**\n   * Overwrites the current set of positions with an array of new ones.\n   * @param positions Position pairs to be set on the strategy.\n   */\n  withPositions(positions: ConnectionPositionPair[]): this {\n    this._preferredPositions = positions.slice();\n    return this;\n  }\n\n  /**\n   * Sets the origin element, relative to which to position the overlay.\n   * @param origin Reference to the new origin element.\n   */\n  setOrigin(origin: ElementRef): this {\n    this._origin = origin.nativeElement;\n    return this;\n  }\n\n  /**\n   * Gets the horizontal (x) \"start\" dimension based on whether the overlay is in an RTL context.\n   * @param rect\n   */\n  private _getStartX(rect: ClientRect): number {\n    return this._isRtl ? rect.right : rect.left;\n  }\n\n  /**\n   * Gets the horizontal (x) \"end\" dimension based on whether the overlay is in an RTL context.\n   * @param rect\n   */\n  private _getEndX(rect: ClientRect): number {\n    return this._isRtl ? rect.left : rect.right;\n  }\n\n\n  /**\n   * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n   * @param originRect\n   * @param pos\n   */\n  private _getOriginConnectionPoint(originRect: ClientRect, pos: ConnectionPositionPair): Point {\n    const originStartX = this._getStartX(originRect);\n    const originEndX = this._getEndX(originRect);\n\n    let x: number;\n    if (pos.originX == 'center') {\n      x = originStartX + (originRect.width / 2);\n    } else {\n      x = pos.originX == 'start' ? originStartX : originEndX;\n    }\n\n    let y: number;\n    if (pos.originY == 'center') {\n      y = originRect.top + (originRect.height / 2);\n    } else {\n      y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n    }\n\n    return {x, y};\n  }\n\n\n  /**\n   * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n   * origin point to which the overlay should be connected, as well as how much of the element\n   * would be inside the viewport at that position.\n   */\n  private _getOverlayPoint(\n      originPoint: Point,\n      overlayRect: ClientRect,\n      viewportSize: {width: number; height: number},\n      pos: ConnectionPositionPair): OverlayPoint {\n    // Calculate the (overlayStartX, overlayStartY), the start of the potential overlay position\n    // relative to the origin point.\n    let overlayStartX: number;\n    if (pos.overlayX == 'center') {\n      overlayStartX = -overlayRect.width / 2;\n    } else if (pos.overlayX === 'start') {\n      overlayStartX = this._isRtl ? -overlayRect.width : 0;\n    } else {\n      overlayStartX = this._isRtl ? 0 : -overlayRect.width;\n    }\n\n    let overlayStartY: number;\n    if (pos.overlayY == 'center') {\n      overlayStartY = -overlayRect.height / 2;\n    } else {\n      overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n    }\n\n    // The (x, y) offsets of the overlay based on the current position.\n    let offsetX = typeof pos.offsetX === 'undefined' ? this._offsetX : pos.offsetX;\n    let offsetY = typeof pos.offsetY === 'undefined' ? this._offsetY : pos.offsetY;\n\n    // The (x, y) coordinates of the overlay.\n    let x = originPoint.x + overlayStartX + offsetX;\n    let y = originPoint.y + overlayStartY + offsetY;\n\n    // How much the overlay would overflow at this position, on each side.\n    let leftOverflow = 0 - x;\n    let rightOverflow = (x + overlayRect.width) - viewportSize.width;\n    let topOverflow = 0 - y;\n    let bottomOverflow = (y + overlayRect.height) - viewportSize.height;\n\n    // Visible parts of the element on each axis.\n    let visibleWidth = this._subtractOverflows(overlayRect.width, leftOverflow, rightOverflow);\n    let visibleHeight = this._subtractOverflows(overlayRect.height, topOverflow, bottomOverflow);\n\n    // The area of the element that's within the viewport.\n    let visibleArea = visibleWidth * visibleHeight;\n    let fitsInViewport = (overlayRect.width * overlayRect.height) === visibleArea;\n\n    return {x, y, fitsInViewport, visibleArea};\n  }\n\n  /**\n   * Gets the view properties of the trigger and overlay, including whether they are clipped\n   * or completely outside the view of any of the strategy's scrollables.\n   */\n  private _getScrollVisibility(overlay: HTMLElement): ScrollingVisibility {\n    const originBounds = this._origin.getBoundingClientRect();\n    const overlayBounds = overlay.getBoundingClientRect();\n    const scrollContainerBounds =\n        this.scrollables.map(s => s.getElementRef().nativeElement.getBoundingClientRect());\n\n    return {\n      isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n      isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n      isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n      isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n    };\n  }\n\n  /** Physically positions the overlay element to the given coordinate. */\n  private _setElementPosition(\n      element: HTMLElement,\n      overlayRect: ClientRect,\n      overlayPoint: Point,\n      pos: ConnectionPositionPair) {\n\n    // We want to set either `top` or `bottom` based on whether the overlay wants to appear above\n    // or below the origin and the direction in which the element will expand.\n    let verticalStyleProperty = pos.overlayY === 'bottom' ? 'bottom' : 'top';\n\n    // When using `bottom`, we adjust the y position such that it is the distance\n    // from the bottom of the viewport rather than the top.\n    let y = verticalStyleProperty === 'top' ?\n        overlayPoint.y :\n        this._document.documentElement.clientHeight - (overlayPoint.y + overlayRect.height);\n\n    // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n    // or \"after\" the origin, which determines the direction in which the element will expand.\n    // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n    // page is in RTL or LTR.\n    let horizontalStyleProperty: string;\n    if (this._dir === 'rtl') {\n      horizontalStyleProperty = pos.overlayX === 'end' ? 'left' : 'right';\n    } else {\n      horizontalStyleProperty = pos.overlayX === 'end' ? 'right' : 'left';\n    }\n\n    // When we're setting `right`, we adjust the x position such that it is the distance\n    // from the right edge of the viewport rather than the left edge.\n    let x = horizontalStyleProperty === 'left' ?\n      overlayPoint.x :\n      this._document.documentElement.clientWidth - (overlayPoint.x + overlayRect.width);\n\n\n    // Reset any existing styles. This is necessary in case the preferred position has\n    // changed since the last `apply`.\n    ['top', 'bottom', 'left', 'right'].forEach(p => element.style[p] = null);\n\n    element.style[verticalStyleProperty] = `${y}px`;\n    element.style[horizontalStyleProperty] = `${x}px`;\n\n    // Notify that the position has been changed along with its change properties.\n    const scrollableViewProperties = this._getScrollVisibility(element);\n    const positionChange = new ConnectedOverlayPositionChange(pos, scrollableViewProperties);\n    this._onPositionChange.next(positionChange);\n  }\n\n  /**\n   * Subtracts the amount that an element is overflowing on an axis from it's length.\n   */\n  private _subtractOverflows(length: number, ...overflows: number[]): number {\n    return overflows.reduce((currentValue: number, currentOverflow: number) => {\n      return currentValue - Math.max(currentOverflow, 0);\n    }, length);\n  }\n}\n\n/** A simple (x, y) coordinate. */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * Expands the simple (x, y) coordinate by adding info about whether the\n * element would fit inside the viewport at that position, as well as\n * how much of the element would be visible.\n */\ninterface OverlayPoint extends Point {\n  visibleArea: number;\n  fitsInViewport: boolean;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PositionStrategy} from './position-strategy';\nimport {OverlayRef} from '../overlay-ref';\n\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nexport class GlobalPositionStrategy implements PositionStrategy {\n  /** The overlay to which this strategy is attached. */\n  private _overlayRef: OverlayRef;\n\n  private _cssPosition = 'static';\n  private _topOffset = '';\n  private _bottomOffset = '';\n  private _leftOffset = '';\n  private _rightOffset = '';\n  private _alignItems = '';\n  private _justifyContent = '';\n  private _width = '';\n  private _height = '';\n\n  /** A lazily-created wrapper for the overlay element that is used as a flex container. */\n  private _wrapper: HTMLElement | null = null;\n\n  constructor(private _document: any) {}\n\n  attach(overlayRef: OverlayRef): void {\n    const config = overlayRef.getConfig();\n\n    this._overlayRef = overlayRef;\n\n    if (this._width && !config.width) {\n      overlayRef.updateSize({width: this._width});\n    }\n\n    if (this._height && !config.height) {\n      overlayRef.updateSize({height: this._height});\n    }\n  }\n\n  /**\n   * Sets the top position of the overlay. Clears any previously set vertical position.\n   * @param value New top offset.\n   */\n  top(value: string = ''): this {\n    this._bottomOffset = '';\n    this._topOffset = value;\n    this._alignItems = 'flex-start';\n    return this;\n  }\n\n  /**\n   * Sets the left position of the overlay. Clears any previously set horizontal position.\n   * @param value New left offset.\n   */\n  left(value: string = ''): this {\n    this._rightOffset = '';\n    this._leftOffset = value;\n    this._justifyContent = 'flex-start';\n    return this;\n  }\n\n  /**\n   * Sets the bottom position of the overlay. Clears any previously set vertical position.\n   * @param value New bottom offset.\n   */\n  bottom(value: string = ''): this {\n    this._topOffset = '';\n    this._bottomOffset = value;\n    this._alignItems = 'flex-end';\n    return this;\n  }\n\n  /**\n   * Sets the right position of the overlay. Clears any previously set horizontal position.\n   * @param value New right offset.\n   */\n  right(value: string = ''): this {\n    this._leftOffset = '';\n    this._rightOffset = value;\n    this._justifyContent = 'flex-end';\n    return this;\n  }\n\n  /**\n   * Sets the overlay width and clears any previously set width.\n   * @param value New width for the overlay\n   * @deprecated Pass the `width` through the `OverlayConfig`.\n   * @deletion-target 7.0.0\n   */\n  width(value: string = ''): this {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({width: value});\n    } else {\n      this._width = value;\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the overlay height and clears any previously set height.\n   * @param value New height for the overlay\n   * @deprecated Pass the `height` through the `OverlayConfig`.\n   * @deletion-target 7.0.0\n   */\n  height(value: string = ''): this {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({height: value});\n    } else {\n      this._height = value;\n    }\n\n    return this;\n  }\n\n  /**\n   * Centers the overlay horizontally with an optional offset.\n   * Clears any previously set horizontal position.\n   *\n   * @param offset Overlay offset from the horizontal center.\n   */\n  centerHorizontally(offset: string = ''): this {\n    this.left(offset);\n    this._justifyContent = 'center';\n    return this;\n  }\n\n  /**\n   * Centers the overlay vertically with an optional offset.\n   * Clears any previously set vertical position.\n   *\n   * @param offset Overlay offset from the vertical center.\n   */\n  centerVertically(offset: string = ''): this {\n    this.top(offset);\n    this._alignItems = 'center';\n    return this;\n  }\n\n  /**\n   * Apply the position to the element.\n   * @docs-private\n   *\n   * @returns Resolved when the styles have been applied.\n   */\n  apply(): void {\n    // Since the overlay ref applies the strategy asynchronously, it could\n    // have been disposed before it ends up being applied. If that is the\n    // case, we shouldn't do anything.\n    if (!this._overlayRef.hasAttached()) {\n      return;\n    }\n\n    const element = this._overlayRef.overlayElement;\n\n    if (!this._wrapper && element.parentNode) {\n      this._wrapper = this._document.createElement('div');\n      this._wrapper!.classList.add('cdk-global-overlay-wrapper');\n      element.parentNode.insertBefore(this._wrapper!, element);\n      this._wrapper!.appendChild(element);\n    }\n\n    const styles = element.style;\n    const parentStyles = (element.parentNode as HTMLElement).style;\n    const config = this._overlayRef.getConfig();\n\n    styles.position = this._cssPosition;\n    styles.marginLeft = config.width === '100%' ? '0' : this._leftOffset;\n    styles.marginTop = config.height === '100%' ? '0' : this._topOffset;\n    styles.marginBottom = this._bottomOffset;\n    styles.marginRight = this._rightOffset;\n\n    parentStyles.justifyContent = config.width === '100%' ? 'flex-start' : this._justifyContent;\n    parentStyles.alignItems = config.height === '100%' ? 'flex-start' : this._alignItems;\n  }\n\n  /** Removes the wrapper element from the DOM. */\n  dispose(): void {\n    if (this._wrapper && this._wrapper.parentNode) {\n      this._wrapper.parentNode.removeChild(this._wrapper);\n      this._wrapper = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef, Injectable, Inject} from '@angular/core';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {ConnectedPositionStrategy} from './connected-position-strategy';\nimport {GlobalPositionStrategy} from './global-position-strategy';\nimport {OverlayConnectionPosition, OriginConnectionPosition} from './connected-position';\nimport {DOCUMENT} from '@angular/common';\n\n\n/** Builder for overlay position strategy. */\n@Injectable()\nexport class OverlayPositionBuilder {\n  constructor(private _viewportRuler: ViewportRuler,\n              @Inject(DOCUMENT) private _document: any) { }\n\n  /**\n   * Creates a global position strategy.\n   */\n  global(): GlobalPositionStrategy {\n    return new GlobalPositionStrategy(this._document);\n  }\n\n  /**\n   * Creates a relative position strategy.\n   * @param elementRef\n   * @param originPos\n   * @param overlayPos\n   */\n  connectedTo(\n      elementRef: ElementRef,\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition): ConnectedPositionStrategy {\n\n    return new ConnectedPositionStrategy(originPos, overlayPos, elementRef,\n        this._viewportRuler, this._document);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Inject, InjectionToken, Optional, SkipSelf, OnDestroy} from '@angular/core';\nimport {OverlayRef} from '../overlay-ref';\nimport {Subscription} from 'rxjs/Subscription';\nimport {filter} from 'rxjs/operators/filter';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\nimport {DOCUMENT} from '@angular/common';\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\n@Injectable()\nexport class OverlayKeyboardDispatcher implements OnDestroy {\n\n  /** Currently attached overlays in the order they were attached. */\n  _attachedOverlays: OverlayRef[] = [];\n\n  private _keydownEventSubscription: Subscription | null;\n\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  ngOnDestroy() {\n    this._unsubscribeFromKeydownEvents();\n  }\n\n  /** Add a new overlay to the list of attached overlay refs. */\n  add(overlayRef: OverlayRef): void {\n    // Lazily start dispatcher once first overlay is added\n    if (!this._keydownEventSubscription) {\n      this._subscribeToKeydownEvents();\n    }\n\n    this._attachedOverlays.push(overlayRef);\n  }\n\n  /** Remove an overlay from the list of attached overlay refs. */\n  remove(overlayRef: OverlayRef): void {\n    const index = this._attachedOverlays.indexOf(overlayRef);\n\n    if (index > -1) {\n      this._attachedOverlays.splice(index, 1);\n    }\n\n    // Remove the global listener once there are no more overlays.\n    if (this._attachedOverlays.length === 0) {\n      this._unsubscribeFromKeydownEvents();\n    }\n  }\n\n  /**\n   * Subscribe to keydown events that land on the body and dispatch those\n   * events to the appropriate overlay.\n   */\n  private _subscribeToKeydownEvents(): void {\n    const bodyKeydownEvents = fromEvent<KeyboardEvent>(this._document.body, 'keydown', true);\n\n    this._keydownEventSubscription = bodyKeydownEvents.pipe(\n      filter(() => !!this._attachedOverlays.length)\n    ).subscribe(event => {\n      // Dispatch keydown event to the correct overlay.\n      this._selectOverlayFromEvent(event)._keydownEvents.next(event);\n    });\n  }\n\n  /** Removes the global keydown subscription. */\n  private _unsubscribeFromKeydownEvents(): void {\n    if (this._keydownEventSubscription) {\n      this._keydownEventSubscription.unsubscribe();\n      this._keydownEventSubscription = null;\n    }\n  }\n\n  /** Select the appropriate overlay from a keydown event. */\n  private _selectOverlayFromEvent(event: KeyboardEvent): OverlayRef {\n    // Check if any overlays contain the event\n    const targetedOverlay = this._attachedOverlays.find(overlay => {\n      return overlay.overlayElement === event.target ||\n          overlay.overlayElement.contains(event.target as HTMLElement);\n    });\n\n    // Use the overlay if it exists, otherwise choose the most recently attached one\n    return targetedOverlay || this._attachedOverlays[this._attachedOverlays.length - 1];\n  }\n\n}\n\n/** @docs-private */\nexport function OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(\n    dispatcher: OverlayKeyboardDispatcher, _document: any) {\n  return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n\n/** @docs-private */\nexport const OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n  // If there is already an OverlayKeyboardDispatcher available, use that.\n  // Otherwise, provide a new one.\n  provide: OverlayKeyboardDispatcher,\n  deps: [\n    [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n\n    // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n    // of the type expected by Angular\n    DOCUMENT as InjectionToken<any>\n  ],\n  useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken, Inject, Optional, SkipSelf, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n/** Container inside which all overlays will render. */\n@Injectable()\nexport class OverlayContainer implements OnDestroy {\n  protected _containerElement: HTMLElement;\n\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  ngOnDestroy() {\n    if (this._containerElement && this._containerElement.parentNode) {\n      this._containerElement.parentNode.removeChild(this._containerElement);\n    }\n  }\n\n  /**\n   * This method returns the overlay container element. It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) { this._createContainer(); }\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  protected _createContainer(): void {\n    const container = this._document.createElement('div');\n\n    container.classList.add('cdk-overlay-container');\n    this._document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n\n/** @docs-private */\nexport function OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer: OverlayContainer,\n  _document: any) {\n  return parentContainer || new OverlayContainer(_document);\n}\n\n/** @docs-private */\nexport const OVERLAY_CONTAINER_PROVIDER = {\n  // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n  provide: OverlayContainer,\n  deps: [\n    [new Optional(), new SkipSelf(), OverlayContainer],\n    DOCUMENT as InjectionToken<any> // We need to use the InjectionToken somewhere to keep TS happy\n  ],\n  useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ComponentFactoryResolver,\n  Injectable,\n  ApplicationRef,\n  Injector,\n  NgZone,\n  Inject,\n} from '@angular/core';\nimport {DomPortalOutlet} from '@angular/cdk/portal';\nimport {OverlayConfig} from './overlay-config';\nimport {OverlayRef} from './overlay-ref';\nimport {OverlayPositionBuilder} from './position/overlay-position-builder';\nimport {OverlayKeyboardDispatcher} from './keyboard/overlay-keyboard-dispatcher';\nimport {OverlayContainer} from './overlay-container';\nimport {ScrollStrategyOptions} from './scroll/index';\nimport {DOCUMENT} from '@angular/common';\n\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\n@Injectable()\nexport class Overlay {\n  constructor(\n              /** Scrolling strategies that can be used when creating an overlay. */\n              public scrollStrategies: ScrollStrategyOptions,\n              private _overlayContainer: OverlayContainer,\n              private _componentFactoryResolver: ComponentFactoryResolver,\n              private _positionBuilder: OverlayPositionBuilder,\n              private _keyboardDispatcher: OverlayKeyboardDispatcher,\n              private _appRef: ApplicationRef,\n              private _injector: Injector,\n              private _ngZone: NgZone,\n              @Inject(DOCUMENT) private _document: any) { }\n\n  /**\n   * Creates an overlay.\n   * @param config Configuration applied to the overlay.\n   * @returns Reference to the created overlay.\n   */\n  create(config?: OverlayConfig): OverlayRef {\n    const pane = this._createPaneElement();\n    const portalOutlet = this._createPortalOutlet(pane);\n\n    return new OverlayRef(\n      portalOutlet,\n      pane,\n      new OverlayConfig(config),\n      this._ngZone,\n      this._keyboardDispatcher,\n      this._document\n    );\n  }\n\n  /**\n   * Gets a position builder that can be used, via fluent API,\n   * to construct and configure a position strategy.\n   * @returns An overlay position builder.\n   */\n  position(): OverlayPositionBuilder {\n    return this._positionBuilder;\n  }\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(): HTMLElement {\n    const pane = this._document.createElement('div');\n\n    pane.id = `cdk-overlay-${nextUniqueId++}`;\n    pane.classList.add('cdk-overlay-pane');\n    this._overlayContainer.getContainerElement().appendChild(pane);\n\n    return pane;\n  }\n\n  /**\n   * Create a DomPortalOutlet into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal outlet.\n   * @returns A portal outlet for the given DOM element.\n   */\n  private _createPortalOutlet(pane: HTMLElement): DomPortalOutlet {\n    return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector);\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Overlay} from './overlay';\nimport {OverlayConfig} from './overlay-config';\nimport {OverlayRef} from './overlay-ref';\nimport {\n  ConnectedOverlayPositionChange,\n  ConnectionPositionPair,\n} from './position/connected-position';\nimport {ConnectedPositionStrategy} from './position/connected-position-strategy';\nimport {RepositionScrollStrategy, ScrollStrategy} from './scroll/index';\n\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'bottom'},\n      {overlayX: 'start', overlayY: 'top'}),\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'top'},\n      {overlayX: 'start', overlayY: 'bottom'}),\n  new ConnectionPositionPair(\n    {originX: 'end', originY: 'top'},\n    {overlayX: 'end', overlayY: 'bottom'}),\n  new ConnectionPositionPair(\n    {originX: 'end', originY: 'bottom'},\n    {overlayX: 'end', overlayY: 'top'}),\n];\n\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nexport const CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('cdk-connected-overlay-scroll-strategy');\n\n/** @docs-private */\nexport function CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n  provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n  exportAs: 'cdkOverlayOrigin',\n})\nexport class CdkOverlayOrigin {\n  constructor(\n      /** Reference to the element on which the directive is applied. */\n      public elementRef: ElementRef) { }\n}\n\n\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n  exportAs: 'cdkConnectedOverlay'\n})\nexport class CdkConnectedOverlay implements OnDestroy, OnChanges {\n  private _overlayRef: OverlayRef;\n  private _templatePortal: TemplatePortal;\n  private _hasBackdrop = false;\n  private _lockPosition = false;\n  private _backdropSubscription = Subscription.EMPTY;\n  private _offsetX: number = 0;\n  private _offsetY: number = 0;\n  private _position: ConnectedPositionStrategy;\n\n  /** Origin for the connected overlay. */\n  @Input('cdkConnectedOverlayOrigin') origin: CdkOverlayOrigin;\n\n  /** Registered connected position pairs. */\n  @Input('cdkConnectedOverlayPositions') positions: ConnectionPositionPair[];\n\n  /** The offset in pixels for the overlay connection point on the x-axis */\n  @Input('cdkConnectedOverlayOffsetX')\n  get offsetX(): number { return this._offsetX; }\n  set offsetX(offsetX: number) {\n    this._offsetX = offsetX;\n    if (this._position) {\n      this._position.withOffsetX(offsetX);\n    }\n  }\n\n  /** The offset in pixels for the overlay connection point on the y-axis */\n  @Input('cdkConnectedOverlayOffsetY')\n  get offsetY() { return this._offsetY; }\n  set offsetY(offsetY: number) {\n    this._offsetY = offsetY;\n    if (this._position) {\n      this._position.withOffsetY(offsetY);\n    }\n  }\n\n  /** The width of the overlay panel. */\n  @Input('cdkConnectedOverlayWidth') width: number | string;\n\n  /** The height of the overlay panel. */\n  @Input('cdkConnectedOverlayHeight') height: number | string;\n\n  /** The min width of the overlay panel. */\n  @Input('cdkConnectedOverlayMinWidth') minWidth: number | string;\n\n  /** The min height of the overlay panel. */\n  @Input('cdkConnectedOverlayMinHeight') minHeight: number | string;\n\n  /** The custom class to be set on the backdrop element. */\n  @Input('cdkConnectedOverlayBackdropClass') backdropClass: string;\n\n  /** Strategy to be used when handling scroll events while the overlay is open. */\n  @Input('cdkConnectedOverlayScrollStrategy') scrollStrategy: ScrollStrategy =\n      this._scrollStrategy();\n\n  /** Whether the overlay is open. */\n  @Input('cdkConnectedOverlayOpen') open: boolean = false;\n\n  /** Whether or not the overlay should attach a backdrop. */\n  @Input('cdkConnectedOverlayHasBackdrop')\n  get hasBackdrop() { return this._hasBackdrop; }\n  set hasBackdrop(value: any) { this._hasBackdrop = coerceBooleanProperty(value); }\n\n  /** Whether or not the overlay should be locked when scrolling. */\n  @Input('cdkConnectedOverlayLockPosition')\n  get lockPosition() { return this._lockPosition; }\n  set lockPosition(value: any) { this._lockPosition = coerceBooleanProperty(value); }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('origin')\n  get _deprecatedOrigin(): CdkOverlayOrigin { return this.origin; }\n  set _deprecatedOrigin(_origin: CdkOverlayOrigin) { this.origin = _origin; }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('positions')\n  get _deprecatedPositions(): ConnectionPositionPair[] { return this.positions; }\n  set _deprecatedPositions(_positions: ConnectionPositionPair[]) { this.positions = _positions; }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('offsetX')\n  get _deprecatedOffsetX(): number { return this.offsetX; }\n  set _deprecatedOffsetX(_offsetX: number) { this.offsetX = _offsetX; }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('offsetY')\n  get _deprecatedOffsetY(): number { return this.offsetY; }\n  set _deprecatedOffsetY(_offsetY: number) { this.offsetY = _offsetY; }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('width')\n  get _deprecatedWidth(): number | string { return this.width; }\n  set _deprecatedWidth(_width: number | string) { this.width = _width; }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('height')\n  get _deprecatedHeight(): number | string { return this.height; }\n  set _deprecatedHeight(_height: number | string) { this.height = _height; }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('minWidth')\n  get _deprecatedMinWidth(): number | string { return this.minWidth; }\n  set _deprecatedMinWidth(_minWidth: number | string) { this.minWidth = _minWidth; }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('minHeight')\n  get _deprecatedMinHeight(): number | string { return this.minHeight; }\n  set _deprecatedMinHeight(_minHeight: number | string) { this.minHeight = _minHeight; }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('backdropClass')\n  get _deprecatedBackdropClass(): string { return this.backdropClass; }\n  set _deprecatedBackdropClass(_backdropClass: string) { this.backdropClass = _backdropClass; }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('scrollStrategy')\n  get _deprecatedScrollStrategy(): ScrollStrategy { return this.scrollStrategy; }\n  set _deprecatedScrollStrategy(_scrollStrategy: ScrollStrategy) {\n    this.scrollStrategy = _scrollStrategy;\n  }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('open')\n  get _deprecatedOpen(): boolean { return this.open; }\n  set _deprecatedOpen(_open: boolean) { this.open = _open; }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('hasBackdrop')\n  get _deprecatedHasBackdrop() { return this.hasBackdrop; }\n  set _deprecatedHasBackdrop(_hasBackdrop: any) { this.hasBackdrop = _hasBackdrop; }\n\n  /** Event emitted when the backdrop is clicked. */\n  @Output() backdropClick = new EventEmitter<MouseEvent>();\n\n  /** Event emitted when the position has changed. */\n  @Output() positionChange = new EventEmitter<ConnectedOverlayPositionChange>();\n\n  /** Event emitted when the overlay has been attached. */\n  @Output() attach = new EventEmitter<void>();\n\n  /** Event emitted when the overlay has been detached. */\n  @Output() detach = new EventEmitter<void>();\n\n  // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n\n  constructor(\n      private _overlay: Overlay,\n      templateRef: TemplateRef<any>,\n      viewContainerRef: ViewContainerRef,\n      @Inject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY) private _scrollStrategy,\n      @Optional() private _dir: Directionality) {\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n  }\n\n  /** The associated overlay reference. */\n  get overlayRef(): OverlayRef {\n    return this._overlayRef;\n  }\n\n  /** The element's layout direction. */\n  get dir(): Direction {\n    return this._dir ? this._dir.value : 'ltr';\n  }\n\n  ngOnDestroy() {\n    this._destroyOverlay();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._position) {\n      if (changes['positions'] || changes['_deprecatedPositions']) {\n        this._position.withPositions(this.positions);\n      }\n\n      if (changes['lockPosition']) {\n        this._position.withLockedPosition(this.lockPosition);\n      }\n\n      if (changes['origin'] || changes['_deprecatedOrigin']) {\n        this._position.setOrigin(this.origin.elementRef);\n\n        if (this.open) {\n          this._position.apply();\n        }\n      }\n    }\n\n    if (changes['open'] || changes['_deprecatedOpen']) {\n      this.open ? this._attachOverlay() : this._detachOverlay();\n    }\n  }\n\n  /** Creates an overlay */\n  private _createOverlay() {\n    if (!this.positions || !this.positions.length) {\n      this.positions = defaultPositionList;\n    }\n\n    this._overlayRef = this._overlay.create(this._buildConfig());\n  }\n\n  /** Builds the overlay config based on the directive's inputs */\n  private _buildConfig(): OverlayConfig {\n    const positionStrategy = this._position = this._createPositionStrategy();\n    const overlayConfig = new OverlayConfig({\n      positionStrategy,\n      scrollStrategy: this.scrollStrategy,\n      hasBackdrop: this.hasBackdrop\n    });\n\n    if (this.width || this.width === 0) {\n      overlayConfig.width = this.width;\n    }\n\n    if (this.height || this.height === 0) {\n      overlayConfig.height = this.height;\n    }\n\n    if (this.minWidth || this.minWidth === 0) {\n      overlayConfig.minWidth = this.minWidth;\n    }\n\n    if (this.minHeight || this.minHeight === 0) {\n      overlayConfig.minHeight = this.minHeight;\n    }\n\n    if (this.backdropClass) {\n      overlayConfig.backdropClass = this.backdropClass;\n    }\n\n    return overlayConfig;\n  }\n\n  /** Returns the position strategy of the overlay to be set on the overlay config */\n  private _createPositionStrategy(): ConnectedPositionStrategy {\n    const primaryPosition = this.positions[0];\n    const originPoint = {originX: primaryPosition.originX, originY: primaryPosition.originY};\n    const overlayPoint = {overlayX: primaryPosition.overlayX, overlayY: primaryPosition.overlayY};\n    const strategy = this._overlay.position()\n      .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\n      .withOffsetX(this.offsetX)\n      .withOffsetY(this.offsetY)\n      .withLockedPosition(this.lockPosition);\n\n    for (let i = 1; i < this.positions.length; i++) {\n      strategy.withFallbackPosition(\n          {originX: this.positions[i].originX, originY: this.positions[i].originY},\n          {overlayX: this.positions[i].overlayX, overlayY: this.positions[i].overlayY}\n      );\n    }\n\n    strategy.onPositionChange.subscribe(pos => this.positionChange.emit(pos));\n\n    return strategy;\n  }\n\n  /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n  private _attachOverlay() {\n    if (!this._overlayRef) {\n      this._createOverlay();\n\n      this._overlayRef!.keydownEvents().subscribe((event: KeyboardEvent) => {\n        if (event.keyCode === ESCAPE) {\n          this._detachOverlay();\n        }\n      });\n    } else {\n      // Update the overlay size, in case the directive's inputs have changed\n      this._overlayRef.updateSize({\n        width: this.width,\n        minWidth: this.minWidth,\n        height: this.height,\n        minHeight: this.minHeight,\n      });\n    }\n\n    this._position.withDirection(this.dir);\n    this._overlayRef.setDirection(this.dir);\n\n    if (!this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._templatePortal);\n      this.attach.emit();\n    }\n\n    if (this.hasBackdrop) {\n      this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n        this.backdropClick.emit(event);\n      });\n    }\n  }\n\n  /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n  private _detachOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n      this.detach.emit();\n    }\n\n    this._backdropSubscription.unsubscribe();\n  }\n\n  /** Destroys the overlay created by this directive. */\n  private _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n\n    this._backdropSubscription.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollDispatchModule, VIEWPORT_RULER_PROVIDER} from '@angular/cdk/scrolling';\nimport {NgModule, Provider} from '@angular/core';\nimport {Overlay} from './overlay';\nimport {OVERLAY_CONTAINER_PROVIDER} from './overlay-container';\nimport {\n  CdkConnectedOverlay,\n  CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n  CdkOverlayOrigin,\n} from './overlay-directives';\nimport {OverlayPositionBuilder} from './position/overlay-position-builder';\nimport {OVERLAY_KEYBOARD_DISPATCHER_PROVIDER} from './keyboard/overlay-keyboard-dispatcher';\nimport {ScrollStrategyOptions} from './scroll/scroll-strategy-options';\n\nexport const OVERLAY_PROVIDERS: Provider[] = [\n  Overlay,\n  OverlayPositionBuilder,\n  OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n  VIEWPORT_RULER_PROVIDER,\n  OVERLAY_CONTAINER_PROVIDER,\n  CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n@NgModule({\n  imports: [BidiModule, PortalModule, ScrollDispatchModule],\n  exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollDispatchModule],\n  declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n  providers: [OVERLAY_PROVIDERS, ScrollStrategyOptions],\n})\nexport class OverlayModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {OverlayContainer} from './overlay-container';\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\n@Injectable()\nexport class FullscreenOverlayContainer extends OverlayContainer {\n  protected _createContainer(): void {\n    super._createContainer();\n    this._adjustParentForFullscreenChange();\n    this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n  }\n\n  private _adjustParentForFullscreenChange(): void {\n    if (!this._containerElement) {\n      return;\n    }\n    let fullscreenElement = this.getFullscreenElement();\n    let parent = fullscreenElement || document.body;\n    parent.appendChild(this._containerElement);\n  }\n\n  private _addFullscreenChangeListener(fn: () => void) {\n    if (document.fullscreenEnabled) {\n      document.addEventListener('fullscreenchange', fn);\n    } else if (document.webkitFullscreenEnabled) {\n      document.addEventListener('webkitfullscreenchange', fn);\n    } else if ((document as any).mozFullScreenEnabled) {\n      document.addEventListener('mozfullscreenchange', fn);\n    } else if ((document as any).msFullscreenEnabled) {\n      document.addEventListener('MSFullscreenChange', fn);\n    }\n  }\n\n  /**\n   * When the page is put into fullscreen mode, a specific element is specified.\n   * Only that element and its children are visible when in fullscreen mode.\n   */\n  getFullscreenElement(): Element {\n    return document.fullscreenElement ||\n        document.webkitFullscreenElement ||\n        (document as any).mozFullScreenElement ||\n        (document as any).msFullscreenElement ||\n        null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './overlay-config';\nexport * from './position/connected-position';\nexport * from './scroll/index';\nexport * from './overlay-module';\nexport {Overlay} from './overlay';\nexport {OverlayContainer} from './overlay-container';\nexport {CdkOverlayOrigin, CdkConnectedOverlay} from './overlay-directives';\nexport {FullscreenOverlayContainer} from './fullscreen-overlay-container';\nexport {OverlayRef, OverlaySizeConfig} from './overlay-ref';\nexport {ViewportRuler} from '@angular/cdk/scrolling';\nexport {ComponentType} from '@angular/cdk/portal';\nexport {OverlayKeyboardDispatcher} from './keyboard/overlay-keyboard-dispatcher';\nexport {OverlayPositionBuilder} from './position/overlay-position-builder';\n\n// Export pre-defined position strategies and interface to build custom ones.\nexport {PositionStrategy} from './position/position-strategy';\nexport {GlobalPositionStrategy} from './position/global-position-strategy';\nexport {ConnectedPositionStrategy} from './position/connected-position-strategy';\nexport {VIEWPORT_RULER_PROVIDER} from '@angular/cdk/scrolling';\n\n/**\n * @deprecated Use CdkConnectedOverlay\n * @deletion-target 6.0.0\n */\nexport {CdkConnectedOverlay as ConnectedOverlayDirective} from './overlay-directives';\n\n/**\n * @deprecated Use CdkOverlayOrigin\n * @deletion-target 6.0.0\n */\nexport {CdkOverlayOrigin as OverlayOrigin} from './overlay-directives';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵg,OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵf} from './keyboard/overlay-keyboard-dispatcher';\nexport {OVERLAY_CONTAINER_PROVIDER as ɵb,OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵa} from './overlay-container';\nexport {CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵc,CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵe,CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵd} from './overlay-directives';"]}