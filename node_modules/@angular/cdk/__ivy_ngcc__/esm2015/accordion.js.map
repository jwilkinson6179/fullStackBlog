{"version":3,"file":"accordion.js","sources":["../../../src/cdk/accordion/accordion.ts","../../../src/cdk/accordion/accordion-item.ts","../../../src/cdk/accordion/accordion-module.ts","../../../src/cdk/accordion/public-api.ts","../../../src/cdk/accordion/index.ts"],"names":["nextId"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId = 0;\n\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\n@Directive({\n  selector: 'cdk-accordion, [cdkAccordion]',\n  exportAs: 'cdkAccordion',\n})\nexport class CdkAccordion {\n  /** A readonly id value to use for unique selection coordination. */\n  readonly id = `cdk-accordion-${nextId++}`;\n\n  /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n  @Input()\n  get multi(): boolean { return this._multi; }\n  set multi(multi: boolean) { this._multi = coerceBooleanProperty(multi); }\n  private _multi: boolean = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Output,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {CdkAccordion} from './accordion';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\n@Directive({\n  selector: 'cdk-accordion-item',\n  exportAs: 'cdkAccordionItem',\n})\nexport class CdkAccordionItem implements OnDestroy {\n  /** Event emitted every time the AccordionItem is closed. */\n  @Output() closed: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted every time the AccordionItem is opened. */\n  @Output() opened: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted when the AccordionItem is destroyed. */\n  @Output() destroyed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Emits whenever the expanded state of the accordion changes.\n   * Primarily used to facilitate two-way binding.\n   * @docs-private\n   */\n  @Output() expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** The unique AccordionItem id. */\n  readonly id: string = `cdk-accordion-child-${nextId++}`;\n\n  /** Whether the AccordionItem is expanded. */\n  @Input()\n  get expanded(): any { return this._expanded; }\n  set expanded(expanded: any) {\n    expanded = coerceBooleanProperty(expanded);\n\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         */\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _expanded = false;\n\n  /** Whether the AccordionItem is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(disabled: any) { this._disabled = coerceBooleanProperty(disabled); }\n  private _disabled: boolean = false;\n\n  /** Unregister function for _expansionDispatcher. */\n  private _removeUniqueSelectionListener: () => void = () => {};\n\n  constructor(@Optional() public accordion: CdkAccordion,\n              private _changeDetectorRef: ChangeDetectorRef,\n              protected _expansionDispatcher: UniqueSelectionDispatcher) {\n    this._removeUniqueSelectionListener =\n      _expansionDispatcher.listen((id: string, accordionId: string) => {\n        if (this.accordion && !this.accordion.multi &&\n            this.accordion.id === accordionId && this.id !== id) {\n          this.expanded = false;\n        }\n      });\n  }\n\n  /** Emits an event for the accordion item being destroyed. */\n  ngOnDestroy() {\n    this.destroyed.emit();\n    this._removeUniqueSelectionListener();\n  }\n\n  /** Toggles the expanded state of the accordion item. */\n  toggle(): void {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to false. */\n  close(): void {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to true. */\n  open(): void {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {UNIQUE_SELECTION_DISPATCHER_PROVIDER} from '@angular/cdk/collections';\nimport {CdkAccordion} from './accordion';\nimport {CdkAccordionItem} from './accordion-item';\n\n@NgModule({\n  exports: [CdkAccordion, CdkAccordionItem],\n  declarations: [CdkAccordion, CdkAccordionItem],\n  providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER],\n})\nexport class CdkAccordionModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {CdkAccordionItem} from './accordion-item';\nexport {CdkAccordion} from './accordion';\nexport * from './accordion-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}