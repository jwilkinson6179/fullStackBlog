{"version":3,"file":"stepper.js","sources":["../../../src/cdk/stepper/step-label.ts","../../../src/cdk/stepper/stepper.ts","../../../src/cdk/stepper/stepper-button.ts","../../../src/cdk/stepper/stepper-module.ts","../../../src/cdk/stepper/public-api.ts","../../../src/cdk/stepper/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: '[cdkStepLabel]',\n})\nexport class CdkStepLabel {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  Directive,\n  ElementRef,\n  Component,\n  ContentChild,\n  ViewChild,\n  TemplateRef,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnChanges,\n  OnDestroy\n} from '@angular/core';\nimport {\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  DOWN_ARROW,\n  UP_ARROW,\n  ENTER,\n  SPACE,\n  HOME,\n  END,\n} from '@angular/cdk/keycodes';\nimport {CdkStepLabel} from './step-label';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {AbstractControl} from '@angular/forms';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {Subject} from 'rxjs/Subject';\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n\n/**\n * Position state of the content of each step in stepper that is used for transitioning\n * the content into correct position upon step selection change.\n */\nexport type StepContentPositionState = 'previous' | 'current' | 'next';\n\n/** Possible orientation of a stepper. */\nexport type StepperOrientation = 'horizontal' | 'vertical';\n\n/** Change event emitted on selection changes. */\nexport class StepperSelectionEvent {\n  /** Index of the step now selected. */\n  selectedIndex: number;\n\n  /** Index of the step previously selected. */\n  previouslySelectedIndex: number;\n\n  /** The step instance now selected. */\n  selectedStep: CdkStep;\n\n  /** The step instance previously selected. */\n  previouslySelectedStep: CdkStep;\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'cdk-step',\n  exportAs: 'cdkStep',\n  templateUrl: 'step.html',\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdkStep implements OnChanges {\n  /** Template for step label if it exists. */\n  @ContentChild(CdkStepLabel) stepLabel: CdkStepLabel;\n\n  /** Template for step content. */\n  @ViewChild(TemplateRef) content: TemplateRef<any>;\n\n  /** The top level abstract control of the step. */\n  @Input() stepControl: AbstractControl;\n\n  /** Whether user has seen the expanded step content or not. */\n  interacted = false;\n\n  /** Label of the step. */\n  @Input() label: string;\n\n  /** Whether the user can return to this step once it has been marked as complted. */\n  @Input()\n  get editable(): boolean { return this._editable; }\n  set editable(value: boolean) {\n    this._editable = coerceBooleanProperty(value);\n  }\n  private _editable = true;\n\n  /** Whether the completion of step is optional. */\n  @Input()\n  get optional(): boolean { return this._optional; }\n  set optional(value: boolean) {\n    this._optional = coerceBooleanProperty(value);\n  }\n  private _optional = false;\n\n  /** Whether step is marked as completed. */\n  @Input()\n  get completed(): boolean {\n    return this._customCompleted == null ? this._defaultCompleted : this._customCompleted;\n  }\n  set completed(value: boolean) {\n    this._customCompleted = coerceBooleanProperty(value);\n  }\n  private _customCompleted: boolean | null = null;\n\n  private get _defaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n\n  constructor(@Inject(forwardRef(() => CdkStepper)) private _stepper: CdkStepper) { }\n\n  /** Selects this step component. */\n  select(): void {\n    this._stepper.selected = this;\n  }\n\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n  reset(): void {\n    this.interacted = false;\n\n    if (this._customCompleted != null) {\n      this._customCompleted = false;\n    }\n\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n}\n\n@Directive({\n  selector: '[cdkStepper]',\n  exportAs: 'cdkStepper',\n})\nexport class CdkStepper implements OnDestroy {\n  /** Emits when the component is destroyed. */\n  protected _destroyed = new Subject<void>();\n\n  /** The list of step components that the stepper is holding. */\n  @ContentChildren(CdkStep) _steps: QueryList<CdkStep>;\n\n  /** The list of step headers of the steps in the stepper. */\n  _stepHeader: QueryList<ElementRef>;\n\n  /** Whether the validity of previous steps should be checked or not. */\n  @Input()\n  get linear(): boolean { return this._linear; }\n  set linear(value: boolean) { this._linear = coerceBooleanProperty(value); }\n  private _linear = false;\n\n  /** The index of the selected step. */\n  @Input()\n  get selectedIndex() { return this._selectedIndex; }\n  set selectedIndex(index: number) {\n    if (this._steps) {\n      // Ensure that the index can't be out of bounds.\n      if (index < 0 || index > this._steps.length - 1) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n\n      if (this._anyControlsInvalidOrPending(index) || index < this._selectedIndex &&\n          !this._steps.toArray()[index].editable) {\n        // remove focus from clicked step header if the step is not able to be selected\n        this._stepHeader.toArray()[index].nativeElement.blur();\n      } else if (this._selectedIndex != index) {\n        this._emitStepperSelectionEvent(index);\n        this._focusIndex = this._selectedIndex;\n      }\n    } else {\n      this._selectedIndex = this._focusIndex = index;\n    }\n  }\n  private _selectedIndex = 0;\n\n  /** The step that is selected. */\n  @Input()\n  get selected(): CdkStep { return this._steps.toArray()[this.selectedIndex]; }\n  set selected(step: CdkStep) {\n    this.selectedIndex = this._steps.toArray().indexOf(step);\n  }\n\n  /** Event emitted when the selected step has changed. */\n  @Output() selectionChange: EventEmitter<StepperSelectionEvent>\n      = new EventEmitter<StepperSelectionEvent>();\n\n  /** The index of the step that the focus can be set. */\n  _focusIndex: number = 0;\n\n  /** Used to track unique ID for each stepper component. */\n  _groupId: number;\n\n  protected _orientation: StepperOrientation = 'horizontal';\n\n  constructor(\n    @Optional() private _dir: Directionality,\n    private _changeDetectorRef: ChangeDetectorRef) {\n    this._groupId = nextId++;\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Selects and focuses the next step in list. */\n  next(): void {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this._steps.length - 1);\n  }\n\n  /** Selects and focuses the previous step in list. */\n  previous(): void {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n  reset(): void {\n    this.selectedIndex = 0;\n    this._steps.forEach(step => step.reset());\n    this._stateChanged();\n  }\n\n  /** Returns a unique id for each step label element. */\n  _getStepLabelId(i: number): string {\n    return `cdk-step-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns unique id for each step content element. */\n  _getStepContentId(i: number): string {\n    return `cdk-step-content-${this._groupId}-${i}`;\n  }\n\n  /** Marks the component to be change detected. */\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Returns position state of the step with the given index. */\n  _getAnimationDirection(index: number): StepContentPositionState {\n    const position = index - this._selectedIndex;\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n    return 'current';\n  }\n\n  /** Returns the type of icon to be displayed. */\n  _getIndicatorType(index: number): 'number' | 'edit' | 'done' {\n    const step = this._steps.toArray()[index];\n    if (!step.completed || this._selectedIndex == index) {\n      return 'number';\n    } else {\n      return step.editable ? 'edit' : 'done';\n    }\n  }\n\n  private _emitStepperSelectionEvent(newIndex: number): void {\n    const stepsArray = this._steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex],\n    });\n    this._selectedIndex = newIndex;\n    this._stateChanged();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n\n    // Note that the left/right arrows work both in vertical and horizontal mode.\n    if (keyCode === RIGHT_ARROW) {\n      this._layoutDirection() === 'rtl' ? this._focusPreviousStep() : this._focusNextStep();\n      event.preventDefault();\n    }\n\n    if (keyCode === LEFT_ARROW) {\n      this._layoutDirection() === 'rtl' ? this._focusNextStep() : this._focusPreviousStep();\n      event.preventDefault();\n    }\n\n    // Note that the up/down arrows only work in vertical mode.\n    // See: https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel\n    if (this._orientation === 'vertical' && (keyCode === UP_ARROW || keyCode === DOWN_ARROW)) {\n      keyCode === UP_ARROW ? this._focusPreviousStep() : this._focusNextStep();\n      event.preventDefault();\n    }\n\n    if (keyCode === SPACE || keyCode === ENTER) {\n      this.selectedIndex = this._focusIndex;\n      event.preventDefault();\n    }\n\n    if (keyCode === HOME) {\n      this._focusStep(0);\n      event.preventDefault();\n    }\n\n    if (keyCode === END) {\n      this._focusStep(this._steps.length - 1);\n      event.preventDefault();\n    }\n  }\n\n  private _focusNextStep() {\n    this._focusStep((this._focusIndex + 1) % this._steps.length);\n  }\n\n  private _focusPreviousStep() {\n    this._focusStep((this._focusIndex + this._steps.length - 1) % this._steps.length);\n  }\n\n  private _focusStep(index: number) {\n    this._focusIndex = index;\n    this._stepHeader.toArray()[this._focusIndex].nativeElement.focus();\n  }\n\n  private _anyControlsInvalidOrPending(index: number): boolean {\n    const steps = this._steps.toArray();\n\n    steps[this._selectedIndex].interacted = true;\n\n    if (this._linear && index >= 0) {\n      return steps.slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete = control ?\n            (control.invalid || control.pending || !step.interacted) :\n            !step.completed;\n        return isIncomplete && !step.optional;\n      });\n    }\n\n    return false;\n  }\n\n  private _layoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\nimport {CdkStepper} from './stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperNext]',\n  host: {\n    '(click)': '_stepper.next()',\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperNext {\n  /** Type of the next button. Defaults to \"submit\" if not specified. */\n  @Input() type: string = 'submit';\n\n  constructor(public _stepper: CdkStepper) {}\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperPrevious]',\n  host: {\n    '(click)': '_stepper.previous()',\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperPrevious {\n  /** Type of the previous button. Defaults to \"button\" if not specified. */\n  @Input() type: string = 'button';\n\n  constructor(public _stepper: CdkStepper) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkStepper, CdkStep} from './stepper';\nimport {CommonModule} from '@angular/common';\nimport {CdkStepLabel} from './step-label';\nimport {CdkStepperNext, CdkStepperPrevious} from './stepper-button';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n@NgModule({\n  imports: [BidiModule, CommonModule],\n  exports: [CdkStep, CdkStepper, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n  declarations: [CdkStep, CdkStepper, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]\n})\nexport class CdkStepperModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './stepper';\nexport * from './step-label';\nexport * from './stepper-button';\nexport * from './stepper-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}