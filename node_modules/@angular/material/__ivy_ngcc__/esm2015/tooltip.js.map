{"version":3,"file":"tooltip.js","sources":["../../../src/lib/tooltip/tooltip-animations.ts","../../../src/lib/tooltip/tooltip.ts","../../../src/lib/tooltip/tooltip-module.ts","../../../src/lib/tooltip/public-api.ts","../../../src/lib/tooltip/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/** Animations used by MatTooltip. */\nexport const matTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({transform: 'scale(0)'})),\n    state('visible', style({transform: 'scale(1)'})),\n    transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationEvent} from '@angular/animations';\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {\n  ConnectionPositionPair,\n  HorizontalConnectionPos,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConfig,\n  OverlayConnectionPosition,\n  OverlayRef,\n  RepositionScrollStrategy,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport {Platform} from '@angular/cdk/platform';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {take} from 'rxjs/operators/take';\nimport {merge} from 'rxjs/observable/merge';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {matTooltipAnimations} from './tooltip-animations';\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\n\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n/** Time in ms to throttle repositioning after scroll events. */\nexport const SCROLL_THROTTLE_MS = 20;\n\n/** CSS class that will be attached to the overlay panel. */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMatTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n\n/** @docs-private */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Default `matTooltip` options that can be overridden. */\nexport interface MatTooltipDefaultOptions {\n  showDelay: number;\n  hideDelay: number;\n  touchendHideDelay: number;\n}\n\n/** Injection token to be used to override the default options for `matTooltip`. */\nexport const MAT_TOOLTIP_DEFAULT_OPTIONS =\n    new InjectionToken<MatTooltipDefaultOptions>('mat-tooltip-default-options');\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\n@Directive({\n  selector: '[matTooltip]',\n  exportAs: 'matTooltip',\n  host: {\n    '(longpress)': 'show()',\n    '(keydown)': '_handleKeydown($event)',\n    '(touchend)': '_handleTouchend()',\n  },\n})\nexport class MatTooltip implements OnDestroy {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: TooltipComponent | null;\n\n  private _position: TooltipPosition = 'below';\n  private _disabled: boolean = false;\n  private _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('matTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n      // the tooltip.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('matTooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('tooltip-position')\n  get _positionDeprecated(): TooltipPosition { return this._position; }\n  set _positionDeprecated(value: TooltipPosition) { this._position = value; }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('matTooltipShowDelay') showDelay =\n      this._defaultOptions ? this._defaultOptions.showDelay : 0;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('matTooltipHideDelay') hideDelay =\n      this._defaultOptions ? this._defaultOptions.hideDelay : 0;\n\n  private _message = '';\n\n  /** The message to be displayed in the tooltip */\n  @Input('matTooltip')\n  get message() { return this._message; }\n  set message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    this._message = value != null ? `${value}`.trim() : '';\n\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._updateTooltipMessage();\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n    }\n  }\n\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n  @Input('matTooltipClass')\n  get tooltipClass() { return this._tooltipClass; }\n  set tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n\n  private _manualListeners = new Map<string, Function>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    private _platform: Platform,\n    private _ariaDescriber: AriaDescriber,\n    private _focusMonitor: FocusMonitor,\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n    @Optional() private _dir: Directionality,\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\n      private _defaultOptions?: MatTooltipDefaultOptions) {\n\n    // TODO(crisbeto): make the `_defaultOptions` a required param next time we do breaking changes.\n    // @deletion-target 6.0.0\n\n    const element: HTMLElement = _elementRef.nativeElement;\n\n    // The mouse events shouldn't be bound on iOS devices, because\n    // they can prevent the first tap from firing its click event.\n    if (!_platform.IOS) {\n      this._manualListeners.set('mouseenter', () => this.show());\n      this._manualListeners.set('mouseleave', () => this.hide());\n\n      this._manualListeners\n        .forEach((listener, event) => _elementRef.nativeElement.addEventListener(event, listener));\n    } else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n      // When we bind a gesture event on an element (in this case `longpress`), HammerJS\n      // will add some inline styles by default, including `user-select: none`. This is\n      // problematic on iOS, because it will prevent users from typing in inputs. If\n      // we're on iOS and the tooltip is attached on an input or textarea, we clear\n      // the `user-select` to avoid these issues.\n      element.style.webkitUserSelect = element.style.userSelect = '';\n    }\n\n    _focusMonitor.monitor(element).subscribe(origin => {\n      // Note that the focus monitor runs outside the Angular zone.\n      if (!origin) {\n        _ngZone.run(() => this.hide(0));\n      } else if (origin !== 'program') {\n        _ngZone.run(() => this.show());\n      }\n    });\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._tooltipInstance) {\n      this._disposeTooltip();\n    }\n\n    // Clean up the event listeners set in the constructor\n    if (!this._platform.IOS) {\n      this._manualListeners.forEach((listener, event) => {\n        this._elementRef.nativeElement.removeEventListener(event, listener);\n      });\n\n      this._manualListeners.clear();\n    }\n\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n    this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message) { return; }\n\n    if (!this._tooltipInstance) {\n      this._createTooltip();\n    }\n\n    this._setTooltipClass(this._tooltipClass);\n    this._updateTooltipMessage();\n    this._tooltipInstance!.show(this._position, delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Handles the keydown events on the host element. */\n  _handleKeydown(e: KeyboardEvent) {\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n      e.stopPropagation();\n      this.hide(0);\n    }\n  }\n\n  /** Handles the touchend events on the host element. */\n  _handleTouchend() {\n    this.hide(this._defaultOptions ? this._defaultOptions.touchendHideDelay : 1500);\n  }\n\n  /** Create the tooltip to display */\n  private _createTooltip(): void {\n    const overlayRef = this._createOverlay();\n    const portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n\n    this._tooltipInstance = overlayRef.attach(portal).instance;\n\n    // Dispose of the tooltip when the overlay is detached.\n    merge(this._tooltipInstance!.afterHidden(), overlayRef.detachments()).subscribe(() => {\n      // Check first if the tooltip has already been removed through this components destroy.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    });\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): OverlayRef {\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay\n      .position()\n      .connectedTo(this._elementRef, origin.main, overlay.main)\n      .withFallbackPosition(origin.fallback, overlay.fallback);\n\n    const scrollableAncestors = this._scrollDispatcher\n      .getAncestorScrollContainers(this._elementRef);\n\n    strategy.withScrollableContainers(scrollableAncestors);\n\n    strategy.onPositionChange.subscribe(change => {\n      if (this._tooltipInstance) {\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        } else {\n          // Otherwise recalculate the origin based on the new position.\n          this._tooltipInstance._setTransformOrigin(change.connectionPair);\n        }\n      }\n    });\n\n    const config = new OverlayConfig({\n      direction: this._dir ? this._dir.value : 'ltr',\n      positionStrategy: strategy,\n      panelClass: TOOLTIP_PANEL_CLASS,\n      scrollStrategy: this._scrollStrategy()\n    });\n\n    this._overlayRef = this._overlay.create(config);\n\n    return this._overlayRef;\n  }\n\n  /** Disposes the current tooltip and the overlay it is attached to */\n  private _disposeTooltip(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n   */\n  _getOrigin(): {main: OriginConnectionPosition, fallback: OriginConnectionPosition} {\n    const isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n    let position: OriginConnectionPosition;\n\n    if (this.position == 'above' || this.position == 'below') {\n      position = {originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom'};\n    } else if (this.position == 'left' ||\n               this.position == 'before' && isDirectionLtr ||\n               this.position == 'after' && !isDirectionLtr) {\n      position = {originX: 'start', originY: 'center'};\n    } else if (this.position == 'right' ||\n               this.position == 'after' && isDirectionLtr ||\n               this.position == 'before' && !isDirectionLtr) {\n      position = {originX: 'end', originY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(this.position);\n    }\n\n    const {x, y} = this._invertPosition(position.originX, position.originY);\n\n    return {\n      main: position,\n      fallback: {originX: x, originY: y}\n    };\n  }\n\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition(): {main: OverlayConnectionPosition, fallback: OverlayConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    let position: OverlayConnectionPosition;\n\n    if (this.position == 'above') {\n      position = {overlayX: 'center', overlayY: 'bottom'};\n    } else if (this.position == 'below') {\n      position = {overlayX: 'center', overlayY: 'top'};\n    } else if (this.position == 'left' ||\n               this.position == 'before' && isLtr ||\n               this.position == 'after' && !isLtr) {\n      position = {overlayX: 'end', overlayY: 'center'};\n    } else if (this.position == 'right' ||\n               this.position == 'after' && isLtr ||\n               this.position == 'before' && !isLtr) {\n      position = {overlayX: 'start', overlayY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(this.position);\n    }\n\n    const {x, y} = this._invertPosition(position.overlayX, position.overlayY);\n\n    return {\n      main: position,\n      fallback: {overlayX: x, overlayY: y}\n    };\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance._markForCheck();\n\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef!.updatePosition();\n        }\n      });\n    }\n  }\n\n  /** Updates the tooltip class */\n  private _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n\n  /** Inverts an overlay position. */\n  private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n    if (this.position === 'above' || this.position === 'below') {\n      if (y === 'top') {\n        y = 'bottom';\n      } else if (y === 'bottom') {\n        y = 'top';\n      }\n    } else {\n      if (x === 'end') {\n        x = 'start';\n      } else if (x === 'start') {\n        x = 'end';\n      }\n    }\n\n    return {x, y};\n  }\n}\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n})\nexport class TooltipComponent {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n  tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId: number;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility = 'initial';\n\n  /** Whether interactions on the page should close the tooltip */\n  private _closeOnInteraction: boolean = false;\n\n  /** The transform origin used in the animation for showing and hiding the tooltip */\n  _transformOrigin: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\n\n  /** Current position of the tooltip. */\n  private _position: TooltipPosition;\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private readonly _onHide: Subject<any> = new Subject();\n\n  /** Stream that emits whether the user has a handset-sized display.  */\n  _isHandset: Observable<BreakpointState> = this._breakpointObserver.observe(Breakpoints.Handset);\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _breakpointObserver: BreakpointObserver) {}\n\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param position Position of the tooltip.\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(position: TooltipPosition, delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n    this._position = position;\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /** Whether the tooltip is being displayed. */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  /** Sets the tooltip transform origin according to the position of the tooltip overlay. */\n  _setTransformOrigin(overlayPosition: ConnectionPositionPair) {\n    const axis = (this._position === 'above' || this._position === 'below') ? 'Y' : 'X';\n    const position = axis == 'X' ? overlayPosition.overlayX : overlayPosition.overlayY;\n\n    if (position === 'top' || position === 'bottom') {\n      this._transformOrigin = position;\n    } else if (position === 'start') {\n      this._transformOrigin = 'left';\n    } else if (position === 'end') {\n      this._transformOrigin = 'right';\n    } else {\n      throw getMatTooltipInvalidPositionError(this._position);\n    }\n  }\n\n  _animationStart() {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as TooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      this._closeOnInteraction = true;\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.google.com/components/tooltips.html#tooltips-interaction\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule, ARIA_DESCRIBER_PROVIDER} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {\n  MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER,\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\n  MatTooltip,\n  TooltipComponent,\n} from './tooltip';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MatCommonModule,\n    PlatformModule,\n    A11yModule,\n    LayoutModule,\n  ],\n  exports: [MatTooltip, TooltipComponent, MatCommonModule],\n  declarations: [MatTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [\n    MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER,\n    ARIA_DESCRIBER_PROVIDER,\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500\n      }\n    }\n  ],\n})\nexport class MatTooltipModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './tooltip-module';\nexport * from './tooltip';\nexport * from './tooltip-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}